version: 2.1

orbs:
  node: circleci/node@0.0.7
  github-release: h-matsuo/github-release@0.1.3

references:
  workspace_root: &workspace_root
                    /tmp/workspace
  attach_workspace: &attach_workspace
    attach_workspace:
      at: *workspace_root
  copy_node_modules: &copy_node_modules
    run:
      name: Getting Node modules from workspace
      command: mv /tmp/workspace/node_modules .

  tag_filters: &tag_filters
    filters:
      tags:
        only: /^v.*/

jobs:
  upload-localisation:
    executor: node/node

    steps:
      - checkout
      - *attach_workspace
      - run:
          name: Uploading localisation source
          command: bash tools/crowdin_upload.sh

  install:
    executor: node/node

    steps:
      - checkout
      - *attach_workspace
      - node/with-cache:
          steps:
            - run: npm install
      - run:
          name: Moving Node modules to workplace
          command: mv node_modules/ /tmp/workspace/
      - persist_to_workspace:
          root: *workspace_root
          paths:
            - node_modules/

  test:
    executor: node/node

    steps:
      - checkout
      - *attach_workspace
      - *copy_node_modules
      - run:
          name: Run tests with JUnit as reporter
          command: npx jest --ci --runInBand --coverage --reporters=default --reporters=jest-junit
          environment:
            JEST_JUNIT_OUTPUT: "reports/junit/js-test-results.xml"
      - store_test_results:
          path: reports/junit
      - store_artifacts:
          path: reports/junit

  compile:
    executor: node/node

    steps:
      - checkout
      - *attach_workspace
      - *copy_node_modules
      - run:
          name: Comiling & Bundling code
          command: |
            [[ -z "$CIRCLE_TAG" ]] && export NO_SENTRY_UPLOAD="true"
            npm run build:production
      - run:
          name: Getting localisations
          command: bash tools/crowdin_download.sh
      - run:
          name: Moving dist to workspace
          command: mv dist/ /tmp/workspace/
      - persist_to_workspace:
          root: *workspace_root
          paths:
            - dist/

  build-extension:
    executor: node/node

    steps:
      - checkout
      - *attach_workspace
      - run:
          name: Getting dist from workplace
          command: |
            rm -rf dist/
            mv /tmp/workspace/dist .
      - run:
          name: Deploy
          command: bash tools/build_extension.sh
      - store_artifacts:
          path: build
      - run:
          name: Moving build artifacts to workspace
          command: mv build/ /tmp/workspace/
      - persist_to_workspace:
          root: *workspace_root
          paths:
            - build/

  documentation:
    executor: node/node

    steps:
      - checkout
      - *attach_workspace
      - *copy_node_modules
      - run: npm run docs -- --gaID $GA_ID
      - run:
          name: Committing Documentation
          command: bash tools/commit_documentation.sh

  deploy:
    executor: node/node

    steps:
      - checkout
      - *attach_workspace
      - *copy_node_modules
      - run: mv /tmp/workspace/build .
      - run:
          name: Deploy
          command: bash tools/deploy.sh
      - store_artifacts:
          path: signed
      - run: mv signed/ /tmp/workspace/
      - persist_to_workspace:
          root: *workspace_root
          paths:
            - signed/

  github_releases:
    executor: github-release/default

    steps:
      - *attach_workspace
      - run:
          name: Creating release directory
          command: mkdir -p release/
      - run:
          name: Moving build artifacts
          command: mv /tmp/workspace/build/* release/
      - run:
          name: Moving signed artifacts
          command: mv /tmp/workspace/signed/* release/
      - github-release/create:
          tag: $CIRCLE_TAG
          title: Version $CIRCLE_TAG
          description: |
            ## Automated release for version $CIRCLE_TAG
            Attached you'll find both the raw and signed build artifacts for this release.

            To install the extension please use [mas-firefox.xpi] for Firefox
            and [mas-chrome.crx] for Chrome.

            ### Links
            [Circle Workflow][workflow-url]


            [mas-firefox.xpi]: ../../releases/download/$CIRCLE_TAG/mas-firefox.xpi
            [mas-chrome.crx]: ../../releases/download/$CIRCLE_TAG/mas-chrome.crx
            [workflow-url]: https://circleci.com/workflow-run/$CIRCLE_WORKFLOW_ID

          file-path: release/

workflows:
  version: 2
  main:
    jobs:
      - upload-localisation

      - install:
          <<: *tag_filters

      - test:
          <<: *tag_filters
          requires:
            - install

      - compile:
          <<: *tag_filters
          requires:
            - install

      - build-extension:
          <<: *tag_filters
          requires:
            - compile

      - documentation:
          requires:
            - install
          filters:
            branches:
              only: master

      - deploy:
          requires:
            - test
            - build-extension
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/

      - github_releases:
          requires:
            - deploy
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
